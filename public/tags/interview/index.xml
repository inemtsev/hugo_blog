<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>interview on EventsLooped</title>
    <link>https://www.eventslooped.com/tags/interview/</link>
    <description>Recent content in interview on EventsLooped</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Ilya Nemtsev 2019</copyright>
    <lastBuildDate>Sat, 16 May 2020 15:52:15 +0700</lastBuildDate>
    
	<atom:link href="https://www.eventslooped.com/tags/interview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Interview Question #2 - Write a function to check if a string is a palindrome</title>
      <link>https://www.eventslooped.com/posts/interview-question-in-go-2/</link>
      <pubDate>Sat, 16 May 2020 15:52:15 +0700</pubDate>
      
      <guid>https://www.eventslooped.com/posts/interview-question-in-go-2/</guid>
      <description>This question is very common on interviews, and while fairly straightforward, plenty developers mess it up on the interview.
What is a palindrome? Webster dictionary defines it as a word, sentence or number that reads the same forwards and backwards. Some examples are: dad, 1881, abba.
There are a few approaches to solving this problem, we can reverse the array of characters and compare the resulting string for example. The more efficient way of doing this is to compare the characters from the beginning and from the end one-by-one.</description>
    </item>
    
    <item>
      <title>Go Interview Question #1 - Find all the prime numbers less than or equal to &#39;n&#39;</title>
      <link>https://www.eventslooped.com/posts/interview-question-in-go-1/</link>
      <pubDate>Wed, 06 May 2020 13:10:43 +0700</pubDate>
      
      <guid>https://www.eventslooped.com/posts/interview-question-in-go-1/</guid>
      <description>As a means of keeping my logic sharp and helping others prepare for Go interviews I decided to release a solved interview question every week or so.
In this post, let&amp;rsquo;s write a function in Go that generates us all the primes at or below a specific integer.
To even attempt this question, we need to know the exact definition of a prime number. According to Wolfram, A prime number is a positive integer p&amp;gt;1 that has no positive integer divisors other than 1 and p itself.</description>
    </item>
    
  </channel>
</rss>